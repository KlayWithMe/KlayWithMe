{"ast":null,"code":"var _jsxFileName = \"/Users/alvinlee/Git_Folder/blockchainAppDebv/client/src/components/postDetail/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./PostDetail.module.scss\";\nimport dateFormat, { masks } from \"dateformat\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { ModalContextProvider } from \"../../context/ModalContext\";\nimport NftButton from \"../nftButton/NftButton\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = await axios.get(\"/posts/\" + id);\n      if (res && res.data) setPost(res.data);\n      fetchUser(res.data);\n    };\n\n    const fetchUser = async post => {\n      const res = await axios.get(\"/users/\" + post.userId).catch(function (error) {});\n      if (res && res.data) setUser(res.data);\n    };\n\n    fetchPost();\n  }, []);\n  let button1 = null;\n  let button2 = null;\n\n  const checkButton = () => {\n    if (!post.isNFT) {\n      if (user.walletAddress !== currentUser.walletAddress) return null;\n      button1 = /*#__PURE__*/_jsxDEV(NftButton, {\n        post: post,\n        user: user,\n        type: \"mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    } else {\n      if (!post.isOnSale) {\n        if (user.walletAddress !== currentUser.walletAddress) return null;\n        button1 = /*#__PURE__*/_jsxDEV(NftButton, {\n          post: post,\n          user: user,\n          type: \"market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this);\n        button2 = /*#__PURE__*/_jsxDEV(NftButton, {\n          post: post,\n          user: user,\n          type: \"burn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this);\n      } else {\n        button1 = /*#__PURE__*/_jsxDEV(NftButton, {\n          post: post,\n          user: user,\n          type: \"buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContextProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.imageContainer,\n        children: post !== null && post !== void 0 && post.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: \"content\",\n          className: styles.imageContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.basicContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.contentTitle,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.contentDate,\n            children: dateFormat(post.createdAt, \"yyyy-mm-dd HH:MM:ss\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.uniqueContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.contentContainer,\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.descriptContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.ownerName,\n              children: [\"owned by \", user ? user.username : \"undefined\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.ownerAddress,\n              children: user ? user.walletAddress : \"undefined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"isNFT? \", post.isNFT ? \"true\" : \"false\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [checkButton(), button1, button2]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"s65+LbZmjQggJElYpDe4avegIrE=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["axios","React","useState","useEffect","useParams","styles","dateFormat","masks","AuthContext","ModalContextProvider","NftButton","useContext","PostDetail","id","post","setPost","user","setUser","currentUser","fetchPost","res","get","data","fetchUser","userId","catch","error","button1","button2","checkButton","isNFT","walletAddress","isOnSale","container","imageContainer","image","imageContent","textContainer","basicContainer","contentTitle","title","contentDate","createdAt","uniqueContainer","contentContainer","content","descriptContainer","ownerName","username","ownerAddress"],"sources":["/Users/alvinlee/Git_Folder/blockchainAppDebv/client/src/components/postDetail/PostDetail.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./PostDetail.module.scss\";\nimport dateFormat, { masks } from \"dateformat\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { ModalContextProvider } from \"../../context/ModalContext\";\nimport NftButton from \"../nftButton/NftButton\";\nimport { useContext } from \"react\";\n\nexport default function PostDetail() {\n  const { id } = useParams();\n  const [post, setPost] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const { user: currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = await axios.get(\"/posts/\" + id);\n      if (res && res.data) setPost(res.data);\n      fetchUser(res.data);\n    };\n    const fetchUser = async (post) => {\n      const res = await axios\n        .get(\"/users/\" + post.userId)\n        .catch(function (error) {});\n      if (res && res.data) setUser(res.data);\n    };\n    fetchPost();\n  }, []);\n\n  let button1 = null;\n  let button2 = null;\n  const checkButton = () => {\n    if (!post.isNFT) {\n      if (user.walletAddress !== currentUser.walletAddress) return null;\n      button1 = <NftButton post={post} user={user} type=\"mint\" />;\n    } else {\n      if (!post.isOnSale) {\n        if (user.walletAddress !== currentUser.walletAddress) return null;\n        button1 = (<NftButton post={post} user={user} type=\"market\" />);\n        button2 = (<NftButton post={post} user={user} type=\"burn\" />)\n      } else {\n        button1 = <NftButton post={post} user={user} type=\"buy\" />;\n      }\n    }\n  };\n\n  return (\n    <ModalContextProvider>\n      <section className={styles.container}>\n        <div className={styles.imageContainer}>\n          {post?.image ? (\n            <img\n              src={post.image}\n              alt=\"content\"\n              className={styles.imageContent}\n            />\n          ) : null}\n        </div>\n        <div className={styles.textContainer}>\n          <div className={styles.basicContainer}>\n            <span className={styles.contentTitle}>{post.title}</span>\n            <div className={styles.contentDate}>\n              {dateFormat(post.createdAt, \"yyyy-mm-dd HH:MM:ss\")}\n            </div>\n          </div>\n          <div className={styles.uniqueContainer}>\n            <div className={styles.contentContainer}>{post.content}</div>\n            <div className={styles.descriptContainer}>\n              <div className={styles.ownerName}>\n                owned by {user ? user.username : \"undefined\"}\n              </div>\n              <div className={styles.ownerAddress}>\n                {user ? user.walletAddress : \"undefined\"}\n              </div>\n              <div>isNFT? {post.isNFT ? \"true\" : \"false\"}</div>\n            </div>\n            <div className=\"\">\n              {checkButton()}\n              {button1}\n              {button2}\n            </div>\n          </div>\n        </div>\n      </section>\n    </ModalContextProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}